cargo-features = ["profile-rustflags"]

[package]
name = "genomic_pca"
version = "0.0.2"
edition = "2021"
description = "A CLI tool for performing PCA on genomic data from VCF files."
license = "MIT"
repository = "https://github.com/SauersML/genomic_pca"
readme = "README.md"
keywords = [
    "pca",
    "genomics",
    "svd",
    "bioinformatics",
    "machine-learning",
]
categories = [
    "algorithms",
    "mathematics",
    "science",
    "science::bioinformatics",
    "science::bioinformatics::genomics",
]
documentation = "https://github.com/SauersML/genomic_pca"

[dependencies]
anyhow = "1.0.98"
clap = { version = "4.5.39", features = ["derive"] }
efficient_pca = { git = "https://github.com/SauersML/efficient_pca.git", branch = "main", default-features = false }
env_logger = "0.11.8"
flume = { version = "0.11.1", features = ["select"] }
indicatif = "0.17.11"
libc = "0.2.172"
log = "0.4.27"
ndarray = "0.16.1"
noodles-vcf = "0.78.0"
num_cpus = "1.17.0"
rayon = "1.10.0"
bed-reader = "1.0.6"
statrs = "0.18.0"
url = "2.5.4"
rand = "0.9.1"
rand_chacha = "0.9.0"
rand_distr = "0.5.1"
serde_json = { version = "1.0.140", optional = true }
ndarray-linalg = { version = "0.17.0", default-features = false }
thiserror = "2.0.12"

[features]
default = [] # must choose

# Format: [ndarray-linalg backend for genomic_pca]-[efficient_pca strategy]

# 1. genomic_pca uses ndarray-linalg with OpenBLAS.
#    efficient_pca uses its `backend_openblas` strategy (which also implies ndarray-linalg/openblas-static).
openblas-openblas = ["ndarray-linalg/openblas-static", "efficient_pca/backend_openblas"]

# 2. genomic_pca uses ndarray-linalg with OpenBLAS.
#    efficient_pca uses its `backend_faer` strategy (which is "dep:faer" and doesn't force an ndarray-linalg backend).
openblas-faer = ["ndarray-linalg/openblas-static", "efficient_pca/backend_faer"]

# 3. genomic_pca uses ndarray-linalg with MKL.
#    efficient_pca uses its `backend_mkl` strategy (which also implies ndarray-linalg/intel-mkl-static).
mkl-mkl = ["ndarray-linalg/intel-mkl-static", "efficient_pca/backend_mkl"]

# 4. genomic_pca uses ndarray-linalg with MKL.
#    efficient_pca uses its `backend_faer` strategy.
mkl-faer = ["ndarray-linalg/intel-mkl-static", "efficient_pca/backend_faer"]

# Utility features
jemalloc = ["efficient_pca/jemalloc"]
eigensnp-diagnostics = ["efficient_pca/enable-eigensnp-diagnostics", "dep:serde_json"]
